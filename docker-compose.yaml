# docker-compose.yml
services:
  postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    restart: always
    env_file:
      - .env
    expose:
      - 5000
    # ports:
    #   - "${MAIN_PORT:-5000}:${MAIN_PORT:-5000}" # Uses MAIN_PORT from .env, defaults to 5000
    volumes:
      - postiz-config:/config/
      - postiz-uploads:/uploads/
    networks:
      - postiz-network
    depends_on:
      postiz-postgres:
        condition: service_healthy
      postiz-redis:
        condition: service_healthy

  postiz-postgres:
    image: postgres:17-alpine
    container_name: postiz-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postiz-password} # Use env var or default
      POSTGRES_USER: ${POSTGRES_USER:-postiz-user}           # Use env var or default
      POSTGRES_DB: ${POSTGRES_DB:-postiz-db-local}           # Use env var or default
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - postiz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postiz-user} -d ${POSTGRES_DB:-postiz-db-local}"]
      interval: 10s
      timeout: 3s
      retries: 3

  postiz-redis:
    image: redis:7.2
    container_name: postiz-redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postiz-redis-data:/data
    networks:
      - postiz-network
  
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - postiz-uploads:/uploads:ro
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"  # if using SSL certificates
    networks:
      - postiz-network
    depends_on:
      - postiz

volumes:
  postgres-volume:
  postiz-redis-data:
  postiz-config:
  postiz-uploads:

networks:
  postiz-network: